<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
      lang="en"
      metal:use-macro="context/main_template/macros/master"
      i18n:domain="eval.workspace">
<body>

<tal:comment tal:condition="nothing">
    This is a sample view template. It will not be used for rendering the
    content unless activated by creation of a view class with a matching name.
    
    Note that we're using Plone 4 macros. Replace them with Plone 3 macros
    if needed.
</tal:comment>

<metal:main fill-slot="content-core">
  

    <metal:block define-macro="content-core"
                    tal:define="kssClassesView context/@@kss_field_decorator_view;
                                getKssClasses nocall:kssClassesView/getKssClassesInlineEditable;
                                templateId template/getId;
                                facetedobj nocall:context/@@faceted_regional_document_listing">
        <metal:listingmacro define-macro="listing">
            <tal:foldercontents define="contentFilter contentFilter|request/contentFilter|nothing;
                        contentFilter python:contentFilter and dict(contentFilter) or {};
                        limit_display limit_display|request/limit_display|nothing;
                        limit_display python:limit_display and int(limit_display) or None;
                        more_url more_url|request/more_url|string:folder_contents;
                        is_a_topic python:context.portal_type=='Topic';
                        friendly_types context/@@plone_portal_state/friendly_types;
                        dummy python:not is_a_topic and contentFilter.setdefault('portal_type', friendly_types);
                        folderContents folderContents|nothing; folderContents python:folderContents or is_a_topic and context.queryCatalog(batch=True, **contentFilter) or context.getFolderContents(contentFilter, batch=True, b_size=limit_display or 100);
                        site_properties context/portal_properties/site_properties;
                        use_view_action site_properties/typesUseViewActionInListings|python:();
                        Batch python:modules['Products.CMFPlone'].Batch;
                        b_start python:request.get('b_start', 0);
                        batch python:isinstance(folderContents, Batch) and folderContents or Batch(folderContents, limit_display or 100, int(b_start), orphan=1);
                        isAnon context/@@plone_portal_state/anonymous;
                        normalizeString nocall: context/plone_utils/normalizeString;
                        toLocalizedTime nocall: context/@@plone/toLocalizedTime;
                        show_about python:not isAnon or site_properties.allowAnonymousViewAbout;
                        navigation_root_url context/@@plone_portal_state/navigation_root_url;
                        pas_member context/@@pas_member;
                        plone_view context/@@plone;
                        current_path python: '/'.join(context.getPhysicalPath())">
                <tal:listing>
                    <table width="100%">
                        <thead>
                            <tr>
                                <th>Title</th>
                                <th>Description</th>
                                <th>Author</th>
                            </tr>
                        </thead>
                        <tbody condition="batch">
                            
                            <tal:entry tal:repeat="item batch" metal:define-macro="entries">
                                <tr tal:condition="python: item.portal_type in ['File', 'Image'] and item.getPath().startswith(current_path)">
                                    <td>
                                        <a tal:attributes="href python: item.getObject().absolute_url()" tal:content="item/Title"></a>
                                    </td>
                                    <td tal:content="item/Description"></td>
                                    <td tal:content="python: facetedobj.author_fullname(item.Creator)"></td>
                                </tr>
                            </tal:entry>
                        </tbody>
                    </table>
                </tal:listing>
                
            </tal:foldercontents>
            
        </metal:listingmacro>
        
    </metal:block>

  
</metal:main>

</body>
</html>

